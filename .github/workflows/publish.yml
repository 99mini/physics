name: Publish (Push github-page branch)

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js 20.x for corepack
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Enable Corepack and Set Pnpm Version
        run: |
          npm install -g corepack@latest
          corepack enable

      - name: Setup Node.js 20.x for pnpm
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build apps/physics & packages/cpp-wasm
        run: |
          pnpm run --filter cpp-wasm build:js
          pnpm run --filter physics build

      - name: Generate release commit message
        id: generate_commit_msg
        run: |
          PKG_VERSION=$(pnpm run --filter physics version)

          # 현재 날짜를 YYMMDD 형식으로 가져오기
          CURRENT_DATE=$(date '+%y%m%d')

          # 마지막 커밋 메시지 가져오기
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B 2>/dev/null || echo "")

          Z_VALUE=1

          if [[ "$LAST_COMMIT_MSG" =~ release:\ ([0-9]+\.[0-9]+\.[0-9]+)-([0-9]{6})\.([0-9]+) ]]; then
            LAST_VERSION="${BASH_REMATCH[1]}"
            LAST_DATE="${BASH_REMATCH[2]}"
            LAST_Z="${BASH_REMATCH[3]}"
            
            # 버전이 같고 날짜도 같은 경우에만 z 값 증가
            if [ "$LAST_VERSION" == "$PKG_VERSION" ] && [ "$LAST_DATE" == "$CURRENT_DATE" ]; then
              Z_VALUE=$((LAST_Z + 1))
            fi
          fi

          COMMIT_MSG="release: v${PKG_VERSION}-${CURRENT_DATE}.${Z_VALUE}"
          echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 새로운 임시 디렉토리 생성
          mkdir -p /tmp/github-pages

          # dist 폴더의 내용을 임시 디렉토리로 복사
          cp -r apps/physics/dist/* /tmp/github-pages/

          # github-page 브랜치로 전환 (없으면 생성)
          git checkout github-page || git checkout -b github-page

          # 브랜치 내용 모두 삭제 (단, .git 폴더는 유지)
          find . -mindepth 1 -maxdepth 1 -not -name '.git' -exec rm -rf {} \;

          # 임시 디렉토리의 내용을 현재 디렉토리로 복사
          cp -r /tmp/github-pages/* .

          # 모든 변경사항 추가 및 커밋
          git add .
          git commit -m "${{ steps.generate_commit_msg.outputs.commit_msg }}"

          # github-page 브랜치에 강제 푸시
          git push origin github-page --force

      - name: Checkout main branch
        run: git checkout main

      - name: Create release note
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.generate_commit_msg.outputs.commit_msg }}
          tag_name: ${{ steps.generate_commit_msg.outputs.commit_msg }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

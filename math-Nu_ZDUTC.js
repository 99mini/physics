const ct={};function dt(S){return S&&S.__esModule&&Object.prototype.hasOwnProperty.call(S,"default")?S.default:S}var Z={exports:{}},we;function ut(){return we||(we=1,function(S,_t){var Q=(()=>{var ee;var G=typeof document<"u"?(ee=document.currentScript)==null?void 0:ee.src:void 0;return async function(H={}){var ge,ve,he;var z,r=H,te=typeof window=="object",P=typeof WorkerGlobalScope<"u",N=typeof process=="object"&&((ge=process.versions)==null?void 0:ge.node)&&process.type!="renderer",re=!te&&!N&&!P;typeof __filename<"u"?G=__filename:P&&(G=self.location.href);var U="";function Te(e){return r.locateFile?r.locateFile(e,U):U+e}var j,D;if(N){if(!(typeof process=="object"&&((ve=process.versions)==null?void 0:ve.node)&&process.type!="renderer"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var ne=process.versions.node,T=ne.split(".").slice(0,3);if(T=T[0]*1e4+T[1]*100+T[2].split("-")[0]*1,T<16e4)throw new Error("This emscripten-generated code requires node v16.0.0 (detected v"+ne+")");var ae=ct;U=__dirname+"/",D=t=>{t=k(t)?new URL(t):t;var n=ae.readFileSync(t);return a(Buffer.isBuffer(n)),n},j=async(t,n=!0)=>{t=k(t)?new URL(t):t;var i=ae.readFileSync(t,n?void 0:"utf8");return a(n?Buffer.isBuffer(i):typeof i=="string"),i},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2)}else if(re){if(typeof process=="object"&&((he=process.versions)==null?void 0:he.node)&&process.type!="renderer"||typeof window=="object"||typeof WorkerGlobalScope<"u")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)")}else if(te||P){try{U=new URL(".",G).href}catch{}if(!(typeof window=="object"||typeof WorkerGlobalScope<"u"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");P&&(D=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),j=async e=>{if(k(e))return new Promise((n,i)=>{var o=new XMLHttpRequest;o.open("GET",e,!0),o.responseType="arraybuffer",o.onload=()=>{if(o.status==200||o.status==0&&o.response){n(o.response);return}i(o.status)},o.onerror=i,o.send(null)});var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw new Error(t.status+" : "+t.url)}}else throw new Error("environment detection error");console.log.bind(console);var u=console.error.bind(console);a(!re,"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.");var b;typeof WebAssembly!="object"&&u("no native wasm support detected");var L=!1;function a(e,t){e||_("Assertion failed"+(t?": "+t:""))}var k=e=>e.startsWith("file://");function be(){var e=J();a((e&3)==0),e==0&&(e+=4),y[e>>2]=34821223,y[e+4>>2]=2310721022,y[0]=1668509029}function $(){if(!L){var e=J();e==0&&(e+=4);var t=y[e>>2],n=y[e+4>>2];(t!=34821223||n!=2310721022)&&_(`Stack overflow! Stack cookie has been overwritten at ${M(e)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${M(n)} ${M(t)}`),y[0]!=1668509029&&_("Runtime error: The application has corrupted its heap memory area (address zero)!")}}(()=>{var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,t[0]!==115||t[1]!==99)throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"})();function O(e){Object.getOwnPropertyDescriptor(r,e)||Object.defineProperty(r,e,{configurable:!0,set(){_(`Attempt to set \`Module.${e}\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`)}})}function F(e){return()=>a(!1,`call to '${e}' via reference taken before Wasm module initialization`)}function ke(e){Object.getOwnPropertyDescriptor(r,e)&&_(`\`Module.${e}\` was supplied but \`${e}\` not included in INCOMING_MODULE_JS_API`)}function Ae(e){return e==="FS_createPath"||e==="FS_createDataFile"||e==="FS_createPreloadedFile"||e==="FS_unlink"||e==="addRunDependency"||e==="FS_createLazyFile"||e==="FS_createDevice"||e==="removeRunDependency"}function Re(e){ie(e)}function ie(e){Object.getOwnPropertyDescriptor(r,e)||Object.defineProperty(r,e,{configurable:!0,get(){var t=`'${e}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;Ae(e)&&(t+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),_(t)}})}var x,B,V,oe,Y,y,W=!1;function Ie(){var e=V.buffer;oe=new Int8Array(e),Y=new Uint8Array(e),y=new Uint32Array(e),new BigInt64Array(e),new BigUint64Array(e)}a(typeof Int32Array<"u"&&typeof Float64Array<"u"&&Int32Array.prototype.subarray!=null&&Int32Array.prototype.set!=null,"JS engine does not provide full typed array support");function Me(){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)ze(r.preRun.shift());O("preRun"),se(ce)}function Ce(){a(!W),W=!0,$(),w.__wasm_call_ctors()}function Pe(){if($(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;)He(r.postRun.shift());O("postRun"),se(le)}var g=0,A=null,R={},v=null;function Ne(e){var t;g++,(t=r.monitorRunDependencies)==null||t.call(r,g),a(!R[e]),R[e]=1,v===null&&typeof setInterval<"u"&&(v=setInterval(()=>{if(L){clearInterval(v),v=null;return}var n=!1;for(var i in R)n||(n=!0,u("still waiting on run dependencies:")),u(`dependency: ${i}`);n&&u("(end of list)")},1e4))}function Ue(e){var n;if(g--,(n=r.monitorRunDependencies)==null||n.call(r,g),a(R[e]),delete R[e],g==0&&(v!==null&&(clearInterval(v),v=null),A)){var t=A;A=null,t()}}function _(e){var n;(n=r.onAbort)==null||n.call(r,e),e="Aborted("+e+")",u(e),L=!0;var t=new WebAssembly.RuntimeError(e);throw B==null||B(t),t}var f={error(){_("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init(){f.error()},createDataFile(){f.error()},createPreloadedFile(){f.error()},createLazyFile(){f.error()},open(){f.error()},mkdev(){f.error()},registerDevice(){f.error()},analyzePath(){f.error()},ErrnoError(){f.error()}};function q(e,t){return(...n)=>{a(W,`native function \`${e}\` called before runtime initialization`);var i=w[e];return a(i,`exported native function \`${e}\` not found`),a(n.length<=t,`native function \`${e}\` called with ${n.length} args but expects ${t}`),i(...n)}}var I;function De(){return Te("math.wasm")}function Le(e){if(e==I&&b)return new Uint8Array(b);if(D)return D(e);throw"both async and sync fetching of the wasm failed"}async function Oe(e){if(!b)try{var t=await j(e);return new Uint8Array(t)}catch{}return Le(e)}async function xe(e,t){try{var n=await Oe(e),i=await WebAssembly.instantiate(n,t);return i}catch(o){u(`failed to asynchronously prepare wasm: ${o}`),k(I)&&u(`warning: Loading from a file URI (${I}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),_(o)}}async function Be(e,t,n){if(!e&&typeof WebAssembly.instantiateStreaming=="function"&&!k(t)&&!N)try{var i=fetch(t,{credentials:"same-origin"}),o=await WebAssembly.instantiateStreaming(i,n);return o}catch(c){u(`wasm streaming compile failed: ${c}`),u("falling back to ArrayBuffer instantiation")}return xe(t,n)}function We(){return{env:Fe,wasi_snapshot_preview1:Fe}}async function Ge(){function e(s,l){return w=s.exports,V=w.memory,a(V,"memory not found in wasm exports"),Ie(),it(w),Ue("wasm-instantiate"),w}Ne("wasm-instantiate");var t=r;function n(s){return a(r===t,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),t=null,e(s.instance)}var i=We();if(r.instantiateWasm)return new Promise((s,l)=>{try{r.instantiateWasm(i,(m,p)=>{s(e(m,p))})}catch(m){u(`Module.instantiateWasm callback failed with error: ${m}`),l(m)}});I??(I=De());var o=await Be(b,I,i),c=n(o);return c}var se=e=>{for(;e.length>0;)e.shift()(r)},le=[],He=e=>le.push(e),ce=[],ze=e=>ce.push(e),M=e=>(a(typeof e=="number"),e>>>=0,"0x"+e.toString(16).padStart(8,"0")),je=e=>_e(e),$e=()=>Se(),h=e=>{h.shown||(h.shown={}),h.shown[e]||(h.shown[e]=1,N&&(e="warning: "+e),u(e))},Ve=e=>{var t=r["_"+e];return a(t,"Cannot call unknown function "+e+", make sure it is exported"),t},Ye=(e,t)=>{a(e.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),oe.set(e,t)},qe=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);i<=127?t++:i<=2047?t+=2:i>=55296&&i<=57343?(t+=4,++n):t+=3}return t},Je=(e,t,n,i)=>{if(a(typeof e=="string",`stringToUTF8Array expects a string (got ${typeof e})`),!(i>0))return 0;for(var o=n,c=n+i-1,s=0;s<e.length;++s){var l=e.codePointAt(s);if(l<=127){if(n>=c)break;t[n++]=l}else if(l<=2047){if(n+1>=c)break;t[n++]=192|l>>6,t[n++]=128|l&63}else if(l<=65535){if(n+2>=c)break;t[n++]=224|l>>12,t[n++]=128|l>>6&63,t[n++]=128|l&63}else{if(n+3>=c)break;l>1114111&&h("Invalid Unicode code point "+M(l)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),t[n++]=240|l>>18,t[n++]=128|l>>12&63,t[n++]=128|l>>6&63,t[n++]=128|l&63,s++}}return t[n]=0,n-o},Ke=(e,t,n)=>(a(typeof n=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),Je(e,Y,t,n)),de=e=>pe(e),Xe=e=>{var t=qe(e)+1,n=de(t);return Ke(e,n,t),n},ue=typeof TextDecoder<"u"?new TextDecoder:void 0,Ze=(e,t,n,i)=>{for(var o=t+n;e[t]&&!(t>=o);)++t;return t},Qe=(e,t=0,n,i)=>{var o=Ze(e,t,n);if(o-t>16&&e.buffer&&ue)return ue.decode(e.subarray(t,o));for(var c="";t<o;){var s=e[t++];if(!(s&128)){c+=String.fromCharCode(s);continue}var l=e[t++]&63;if((s&224)==192){c+=String.fromCharCode((s&31)<<6|l);continue}var m=e[t++]&63;if((s&240)==224?s=(s&15)<<12|l<<6|m:((s&248)!=240&&h("Invalid UTF-8 leading byte "+M(s)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),s=(s&7)<<18|l<<12|m<<6|e[t++]&63),s<65536)c+=String.fromCharCode(s);else{var p=s-65536;c+=String.fromCharCode(55296|p>>10,56320|p&1023)}}return c},et=(e,t,n)=>(a(typeof e=="number",`UTF8ToString expects a number (got ${typeof e})`),e?Qe(Y,e,t):""),fe=(e,t,n,i,o)=>{var c={string:d=>{var C=0;return d!=null&&d!==0&&(C=Xe(d)),C},array:d=>{var C=de(d.length);return Ye(d,C),C}};function s(d){return t==="string"?et(d):t==="boolean"?!!d:d}var l=Ve(e),m=[],p=0;if(a(t!=="array",'Return type should not be "array".'),i)for(var E=0;E<i.length;E++){var Ee=c[n[E]];Ee?(p===0&&(p=$e()),m[E]=Ee(i[E])):m[E]=i[E]}var X=l(...m);function lt(d){return p!==0&&je(p),s(d)}return X=lt(X),X},tt=(e,t,n,i)=>(...o)=>fe(e,t,n,o);r.noExitRuntime&&r.noExitRuntime,r.print&&r.print,r.printErr&&(u=r.printErr),r.wasmBinary&&(b=r.wasmBinary),r.FS_createDataFile=f.createDataFile,r.FS_createPreloadedFile=f.createPreloadedFile,at(),r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,a(typeof r.memoryInitializerPrefixURL>"u","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.pthreadMainPrefixURL>"u","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.cdInitializerPrefixURL>"u","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.filePackagePrefixURL>"u","Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),a(typeof r.read>"u","Module.read option was removed"),a(typeof r.readAsync>"u","Module.readAsync option was removed (modify readAsync in JS)"),a(typeof r.readBinary>"u","Module.readBinary option was removed (modify readBinary in JS)"),a(typeof r.setWindowTitle>"u","Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),a(typeof r.TOTAL_MEMORY>"u","Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),a(typeof r.ENVIRONMENT>"u","Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)"),a(typeof r.STACK_SIZE>"u","STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),a(typeof r.wasmMemory>"u","Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),a(typeof r.INITIAL_MEMORY>"u","Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),r.ccall=fe,r.cwrap=tt;var rt=["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","bigintToI53Checked","getTempRet0","setTempRet0","zeroMemory","exitJS","getHeapMax","abortOnCannotGrowMemory","growMemory","withStackSave","strError","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","readEmAsmArgs","jstoi_q","getExecutableName","autoResumeAudioContext","getDynCaller","dynCall","handleException","keepRuntimeAlive","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","HandleAllocator","getNativeTypeSize","getUniqueRunDependency","addOnInit","addOnPostCtor","addOnPreMain","addOnExit","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToNewUTF8","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","getCallstack","convertPCtoSourceLocation","getEnvStrings","checkWasiClock","flush_NO_FILESYSTEM","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","initRandomFill","randomFill","safeSetTimeout","setImmediateWrapped","safeRequestAnimationFrame","clearImmediateWrapped","registerPostMainLoop","registerPreMainLoop","getPromise","makePromise","idsToPromises","makePromiseCallback","ExceptionInfo","findMatchingCatch","Browser_asyncPrepareDataCounter","isLeapYear","ydayFromDate","arraySum","addDays","getSocketFromFD","getSocketAddress","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","toTypedArrayIndex","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","webgl_enable_EXT_polygon_offset_clamp","webgl_enable_EXT_clip_control","webgl_enable_WEBGL_polygon_mode","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","demangle","stackTrace"];rt.forEach(Re);var nt=["run","addRunDependency","removeRunDependency","out","err","callMain","abort","wasmMemory","wasmExports","HEAPF32","HEAPF64","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAP64","HEAPU64","writeStackCookie","checkStackCookie","INT53_MAX","INT53_MIN","stackSave","stackRestore","stackAlloc","ptrToString","ENV","ERRNO_CODES","DNS","Protocols","Sockets","timers","warnOnce","readEmAsmArgsArray","wasmTable","noExitRuntime","addOnPreRun","addOnPostRun","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","UTF16Decoder","stringToUTF8OnStack","writeArrayToMemory","JSEvents","specialHTMLTargets","findCanvasEventTarget","currentFullscreenStrategy","restoreOldWindowedStyle","UNWIND_CACHE","ExitStatus","emSetImmediate","emClearImmediate_deps","emClearImmediate","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","Browser","requestFullscreen","requestFullScreen","setCanvasSize","getUserMedia","createContext","getPreloadedImageData__data","wget","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","SYSCALLS","preloadPlugins","FS_stdin_getChar_buffer","FS_unlink","FS_createPath","FS_createDevice","FS_readFile","FS","FS_root","FS_mounts","FS_devices","FS_streams","FS_nextInode","FS_nameTable","FS_currentPath","FS_initialized","FS_ignorePermissions","FS_filesystems","FS_syncFSRequests","FS_readFiles","FS_lookupPath","FS_getPath","FS_hashName","FS_hashAddNode","FS_hashRemoveNode","FS_lookupNode","FS_createNode","FS_destroyNode","FS_isRoot","FS_isMountpoint","FS_isFile","FS_isDir","FS_isLink","FS_isChrdev","FS_isBlkdev","FS_isFIFO","FS_isSocket","FS_flagsToPermissionString","FS_nodePermissions","FS_mayLookup","FS_mayCreate","FS_mayDelete","FS_mayOpen","FS_checkOpExists","FS_nextfd","FS_getStreamChecked","FS_getStream","FS_createStream","FS_closeStream","FS_dupStream","FS_doSetAttr","FS_chrdev_stream_ops","FS_major","FS_minor","FS_makedev","FS_registerDevice","FS_getDevice","FS_getMounts","FS_syncfs","FS_mount","FS_unmount","FS_lookup","FS_mknod","FS_statfs","FS_statfsStream","FS_statfsNode","FS_create","FS_mkdir","FS_mkdev","FS_symlink","FS_rename","FS_rmdir","FS_readdir","FS_readlink","FS_stat","FS_fstat","FS_lstat","FS_doChmod","FS_chmod","FS_lchmod","FS_fchmod","FS_doChown","FS_chown","FS_lchown","FS_fchown","FS_doTruncate","FS_truncate","FS_ftruncate","FS_utime","FS_open","FS_close","FS_isClosed","FS_llseek","FS_read","FS_write","FS_mmap","FS_msync","FS_ioctl","FS_writeFile","FS_cwd","FS_chdir","FS_createDefaultDirectories","FS_createDefaultDevices","FS_createSpecialDirectories","FS_createStandardStreams","FS_staticInit","FS_init","FS_quit","FS_findObject","FS_analyzePath","FS_createFile","FS_createDataFile","FS_forceLoadFile","FS_createLazyFile","FS_absolutePath","FS_createFolder","FS_createLink","FS_joinPath","FS_mmapAlloc","FS_standardizePath","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","print","printErr","jstoi_s"];nt.forEach(ie);function at(){ke("fetchSettings")}r._add=F("_add"),r._multiply=F("_multiply"),r._calculateVelocity=F("_calculateVelocity");var me=F("_emscripten_stack_init"),J=F("_emscripten_stack_get_end"),_e=F("__emscripten_stack_restore"),pe=F("__emscripten_stack_alloc"),Se=F("_emscripten_stack_get_current");function it(e){r._add=q("add",2),r._multiply=q("multiply",2),r._calculateVelocity=q("calculateVelocity",2),me=e.emscripten_stack_init,e.emscripten_stack_get_free,e.emscripten_stack_get_base,J=e.emscripten_stack_get_end,_e=e._emscripten_stack_restore,pe=e._emscripten_stack_alloc,Se=e.emscripten_stack_get_current}var Fe={},w=await Ge(),ye;function ot(){me(),be()}function K(){if(g>0){A=K;return}if(ot(),Me(),g>0){A=K;return}function e(){var t;a(!ye),ye=!0,r.calledRun=!0,!L&&(Ce(),x==null||x(r),(t=r.onRuntimeInitialized)==null||t.call(r),O("onRuntimeInitialized"),a(!r._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),Pe())}r.setStatus?(r.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>r.setStatus(""),1),e()},1)):e(),$()}function st(){if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.shift()();O("preInit")}st(),K(),W?z=r:z=new Promise((e,t)=>{x=e,B=t});for(const e of Object.keys(r))e in H||Object.defineProperty(H,e,{configurable:!0,get(){_(`Access to module property ('${e}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)}});return z}})();S.exports=Q,S.exports.default=Q}(Z)),Z.exports}var ft=ut(),mt=dt(ft),pt=Object.freeze({__proto__:null,default:mt});export{pt as m};
